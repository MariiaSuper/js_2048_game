{"version":3,"sources":["scripts/game_logic.js","scripts/game.js","scripts/main.js"],"names":["moveRight","arr","i","length","j","value","sumInArray","addedSum","sumCount","isArraysDifferent","arr1","arr2","r","row","row2","c","moveRightWithSumm","reverse","newArr","getColumn","newColumn","column","push","getCoords","n","count","getRandomValue","Math","random","setRandomValue","res","getRandomCoords","col","getEmptyCellCount","res2","ceil","replaceColumn","getArr","isWin","isLose","cloneArr","copyField","moveAllToDownWithSumm","moveAllToUpWithSumm","moveAllToLeftWithSumm","moveAllToRightWithSumm","moveLeftWithSumm","addedScore","Game","render","scoreCount","play","field","bind","startRestartGame","nextStep","move","previousField","win","direction","startButton","document","querySelector","loseMessage","winMessage","startMessage","score","game","e","preventDefault","key","textContent","classList","add","remove","x","y","cell","addEventListener"],"mappings":"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","file":"main.bf7a3611.js","sourceRoot":"../src","sourcesContent":["function moveRight(arr) {\n  for (let i = arr.length - 2; i >= 0; i--) {\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[j] > 0) {\n        break;\n      } else {\n        const value = arr[j - 1];\n\n        arr[j - 1] = arr[j];\n        arr[j] = value;\n      }\n    }\n  }\n\n  return arr;\n}\n\nfunction sumInArray(arr) {\n  let addedSum = 0;\n\n  for (let i = arr.length - 2; i >= 0; i--) {\n    if (arr[i] === arr[i + 1]) {\n      const sumCount = arr[i] + arr[i + 1];\n\n      arr[i + 1] = sumCount;\n      arr[i] = 0;\n      addedSum += sumCount;\n    }\n  }\n\n  return addedSum;\n}\n\nexport function isArraysDifferent(arr1, arr2) {\n  for (let r = 0; r < arr1.length; r++) {\n    const row = arr1[r];\n    const row2 = arr2[r];\n\n    for (let c = 0; c < row.length; c++) {\n      if (row[c] !== row2[c]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction moveRightWithSumm(arr) {\n  moveRight(arr);\n\n  const addedSum = sumInArray(arr);\n\n  moveRight(arr);\n\n  return addedSum;\n}\n\nfunction reverse(arr) {\n  const newArr = arr.reverse();\n\n  return newArr;\n}\n\nfunction getColumn(arr, i) {\n  const newColumn = [];\n\n  for (let r = 0; r < arr.length; r++) {\n    const column = arr[r];\n\n    newColumn.push(column[i]);\n  }\n\n  return newColumn;\n}\n\nfunction getCoords(arr, n) {\n  let count = 0;\n\n  for (let r = 0; r < arr.length; r++) {\n    const row = arr[r];\n\n    for (let c = 0; c < row.length; c++) {\n      if (row[c] === 0) {\n        count++;\n\n        if (count === n) {\n          return [r, c];\n        }\n      }\n    }\n  }\n}\n\nfunction getRandomValue() {\n  return Math.random() > 0.9 ? 4 : 2;\n}\n\nexport function setRandomValue(arr) {\n  const res = getRandomCoords(arr);\n  const [row, col] = res;\n\n  arr[row][col] = getRandomValue();\n}\n\nexport function getEmptyCellCount(arr) {\n  let count = 0;\n\n  for (let r = 0; r < arr.length; r++) {\n    const row = arr[r];\n\n    for (let c = 0; c < row.length; c++) {\n      if (row[c] === 0) {\n        count++;\n      }\n    }\n  }\n\n  return count;\n}\n\nfunction getRandomCoords(arr) {\n  const res = getEmptyCellCount(arr);\n\n  const n = Math.ceil(Math.random() * res);\n\n  const res2 = getCoords(arr, n);\n\n  return res2;\n}\n\nfunction replaceColumn(arr, getArr, i) {\n  for (let r = 0; r < arr.length; r++) {\n    const column = arr[r];\n\n    column[i] = getArr[r];\n  }\n\n  return arr;\n}\n\nexport function isWin(arr) {\n  for (let r = 0; r < arr.length; r++) {\n    const column = arr[r];\n\n    for (let c = 0; c < column.length; c++) {\n      if (column[c] === 2048) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nexport function isLose(arr) {\n  const cloneArr = copyField(arr);\n  const res = getEmptyCellCount(cloneArr);\n  const score1 = moveAllToDownWithSumm(cloneArr);\n  const score2 = moveAllToUpWithSumm(cloneArr);\n  const score3 = moveAllToLeftWithSumm(cloneArr);\n  const score4 = moveAllToRightWithSumm(cloneArr);\n\n  if (res + score1 + score2 + score3 + score4 === 0) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function copyField(arr) {\n  const res = [];\n\n  for (let r = 0; r < arr.length; r++) {\n    const row = arr[r];\n\n    res.push([...row]);\n  }\n\n  return res;\n}\n\nfunction moveLeftWithSumm(arr) {\n  reverse(arr);\n\n  const addedSum = moveRightWithSumm(arr);\n\n  reverse(arr);\n\n  return addedSum;\n}\n\nexport function moveAllToRightWithSumm(arr) {\n  let addedScore = 0;\n\n  for (let i = 0; i < arr.length; i++) {\n    addedScore += moveRightWithSumm(arr[i]);\n  }\n\n  return addedScore;\n}\n\nexport function moveAllToLeftWithSumm(arr) {\n  let addedScore = 0;\n\n  for (let i = 0; i < arr.length; i++) {\n    addedScore += moveLeftWithSumm(arr[i]);\n  }\n\n  return addedScore;\n}\n\nexport function moveAllToDownWithSumm(arr) {\n  let addedScore = 0;\n\n  for (let c = 0; c < arr.length; c++) {\n    const res = getColumn(arr, c);\n\n    addedScore += moveRightWithSumm(res);\n    replaceColumn(arr, res, c);\n  }\n\n  return addedScore;\n}\n\nexport function moveAllToUpWithSumm(arr) {\n  let addedScore = 0;\n\n  for (let c = 0; c < arr.length; c++) {\n    const res = getColumn(arr, c);\n\n    addedScore += moveLeftWithSumm(res);\n    replaceColumn(arr, res, c);\n  }\n\n  return addedScore;\n}\n","\nimport {\n  moveAllToDownWithSumm,\n  moveAllToLeftWithSumm,\n  moveAllToRightWithSumm,\n  moveAllToUpWithSumm,\n  setRandomValue,\n  getEmptyCellCount,\n  isWin,\n  isLose,\n  copyField,\n  isArraysDifferent,\n} from './game_logic';\n\nexport class Game {\n  render() {}\n\n  constructor(render) {\n    this.scoreCount = 0;\n    this.play = 'NOT_STARTED'; // 'NOT_STARTED' 'STARTED' 'WIN' 'DEFEAT'\n\n    this.field = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    this.render = render;\n    this.render.bind(this);\n    this.startRestartGame.bind(this);\n    this.nextStep.bind(this);\n    this.move.bind(this);\n  }\n\n  startRestartGame() {\n    if (this.play === 'STARTED'\n    || this.play === 'DEFEAT'\n    || this.play === 'WIN'\n    ) {\n      this.field = [\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n      ];\n      this.scoreCount = 0;\n    }\n\n    this.play = 'STARTED';\n\n    setRandomValue(this.field);\n    setRandomValue(this.field);\n\n    this.render();\n  }\n\n  nextStep(previousField) {\n    const win = isWin(this.field);\n\n    if (win === true) {\n      this.play = 'WIN';\n    } else {\n      if (isLose(this.field)) {\n        this.play = 'DEFEAT';\n\n        return;\n      }\n\n      if (getEmptyCellCount(this.field) > 0) {\n        if (isArraysDifferent(previousField, this.field)) {\n          setRandomValue(this.field);\n        }\n\n        if (isLose(this.field)) {\n          this.play = 'DEFEAT';\n        }\n      }\n    }\n  }\n\n  move(direction) {\n    if (this.play !== 'STARTED') {\n      return;\n    }\n\n    const previousField = copyField(this.field);\n\n    if (direction === 'ArrowUp') {\n      const addedScore = moveAllToUpWithSumm(this.field);\n\n      this.scoreCount += addedScore;\n\n      this.nextStep(previousField);\n    }\n\n    if (direction === 'ArrowDown') {\n      const addedScore = moveAllToDownWithSumm(this.field);\n\n      this.scoreCount += addedScore;\n\n      this.nextStep(previousField);\n    }\n\n    if (direction === 'ArrowRight') {\n      const addedScore = moveAllToRightWithSumm(this.field);\n\n      this.scoreCount += addedScore;\n\n      this.nextStep(previousField);\n    }\n\n    if (direction === 'ArrowLeft') {\n      const addedScore = moveAllToLeftWithSumm(this.field);\n\n      this.scoreCount += addedScore;\n\n      this.nextStep(previousField);\n    }\n\n    this.render();\n  }\n}\n","\nimport { Game } from './game';\n\nconst startButton = document.querySelector('.start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nconst startMessage = document.querySelector('.message-start');\nconst score = document.querySelector('.game-score');\n\nconst game = new Game(render);\n\ngame.render();\n\nstartButton.addEventListener('click', startRestartGame);\n\nfunction startRestartGame() {\n  game.startRestartGame();\n}\n\ndocument.addEventListener('keydown', move);\n\nfunction move(e) {\n  e.preventDefault();\n\n  game.move(e.key);\n}\n\nfunction render() {\n  // dispay Start or Restart\n  if (this.play === 'STARTED') {\n    startButton.textContent = 'Restart';\n    startMessage.classList.add('hidden');\n    winMessage.classList.add('hidden');\n    loseMessage.classList.add('hidden');\n  }\n\n  if (this.play === 'NOT_STARTED') {\n    startButton.textContent = 'Start';\n    startMessage.classList.remove('hidden');\n    winMessage.classList.add('hidden');\n    loseMessage.classList.add('hidden');\n  }\n\n  if (this.play === 'WIN') {\n    startButton.textContent = 'Start';\n    startMessage.classList.add('hidden');\n    winMessage.classList.remove('hidden');\n    loseMessage.classList.add('hidden');\n  }\n\n  if (this.play === 'DEFEAT') {\n    startButton.textContent = 'Restart';\n    startMessage.classList.add('hidden');\n    winMessage.classList.add('hidden');\n    loseMessage.classList.remove('hidden');\n  }\n\n  // display field\n  for (let x = 0; x < this.field.length; x++) {\n    const row = this.field[x];\n\n    for (let y = 0; y < row.length; y++) {\n      const value = row[y];\n\n      const cell = document.querySelector(\n        `.game-field .field-row:nth-child(${x + 1}) .field-cell:nth-child(${y + 1})` // eslint-disable-line max-len\n      );\n\n      cell.classList = ['field-cell'];\n\n      if (value !== 0) {\n        cell.textContent = `${value}`;\n        cell.classList.add(`field-cell--${value}`);\n      } else {\n        cell.textContent = '';\n      }\n    }\n  }\n\n  score.textContent = `${this.scoreCount}`;\n}\n"]}